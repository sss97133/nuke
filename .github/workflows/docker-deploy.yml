name: Docker Build and Deploy

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Build Docker image with retries
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME || 'local' }}/nuke:test
          cache-from: |
            type=local,src=/tmp/.buildx-cache
            type=gha
          cache-to: |
            type=local,dest=/tmp/.buildx-cache-new
            type=gha,mode=max
          provenance: false
      
      - name: Test Docker image
        run: |
          # Run container and test nginx configuration
          docker run --rm ${{ secrets.DOCKER_HUB_USERNAME || 'local' }}/nuke:test nginx -t
          # Test the application
          docker run -d -p 8080:8080 --name test-container ${{ secrets.DOCKER_HUB_USERNAME || 'local' }}/nuke:test
          sleep 5
          curl -f http://localhost:8080/ || exit 1
          docker stop test-container
          echo "Docker image built and tested successfully"
      
      - name: Push to Docker Hub
        if: github.event_name != 'pull_request' && success()
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/nuke:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/nuke:${{ github.sha }}
          cache-from: |
            type=local,src=/tmp/.buildx-cache
            type=gha
          cache-to: |
            type=local,dest=/tmp/.buildx-cache-new
            type=gha,mode=max
          provenance: false
      
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      
      - name: Verify push
        if: github.event_name != 'pull_request' && success()
        run: |
          echo "üöÄ Docker image pushed to Docker Hub successfully!"
          echo "Image: ${{ secrets.DOCKER_HUB_USERNAME }}/nuke:latest"
          echo "Image with SHA: ${{ secrets.DOCKER_HUB_USERNAME }}/nuke:${{ github.sha }}"
      
      - name: Handle Failure
        if: failure()
        run: |
          echo "‚ùå Docker build or push failed!"
          echo "Please check:"
          echo "1. Docker Hub credentials are set correctly in GitHub Secrets"
          echo "2. Dockerfile is valid and all dependencies are accessible"
          echo "3. npm dependencies can be installed successfully"
          docker logs test-container || true
          exit 1
