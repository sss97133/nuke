name: Docker

on:
  push:
    tags: ["*"]
    branches:
      - "main"
  pull_request:
    branches: ["**"]
    paths:
      - 'Dockerfile'
      - '.github/workflows/docker.yml'
      - 'docker-compose*.yml'
      - '.dockerignore'

env:
  # Hostname of your registry
  REGISTRY: docker.io
  # Image repository, without hostname and tag
  IMAGE_NAME: ${{ github.repository }}
  SHA: ${{ github.event.pull_request.head.sha || github.event.after }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Authenticate to the container registry
      - name: Authenticate to registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # Install Docker Scout CLI
      - name: Install Docker Scout
        run: |
          curl -sSfL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh | sh -s --
          docker scout version

      # Extract metadata (tags, labels) for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.revision=${{ env.SHA }}
          tags: |
            type=edge,branch=$repo.default_branch
            type=semver,pattern=v{{version}}
            type=sha,prefix=,suffix=,format=short

      # Build and push Docker image with Buildx
      # (don't push on PR, load instead)
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          sbom: ${{ github.event_name != 'pull_request' }}
          provenance: ${{ github.event_name != 'pull_request' }}
          push: ${{ github.event_name != 'pull_request' }}
          load: ${{ github.event_name == 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Run security scan based on branch
      - name: Run Docker Scout Security Scan
        if: success()
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "Running on main branch: Performing full CVE scan"
            # Scan for critical and high severity CVEs
            docker scout cves "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" --exit-code --only-severity critical,high
          else
            echo "Running on branch '${{ github.ref }}': Comparing with main"
            # Compare with latest image from main branch
            docker scout compare "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}" \
              --to "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" \
              --exit-code --only-severity critical,high --ignore-unchanged
          fi

      # Post scan results as PR comment if this is a pull request
      - name: Post Scan Results
        if: github.event_name == 'pull_request' && success()
        uses: actions/github-script@v7
        with:
          script: |
            const scanOutput = `Docker Scout security scan completed:
            - Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            - Status: ${{ job.status }}
            
            See workflow run for detailed results.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: scanOutput
            }); 