name: Sync Secrets to Vercel

on:
  # Run manually from the Actions tab
  workflow_dispatch:
  
  # Run when secrets are updated in GitHub
  # Note: Only runs when repository secrets are updated through the GitHub UI
  repository_dispatch:
    types: [secrets_updated]
  
  # Run when pushing to main (optional, remove if you prefer manual trigger only)
  push:
    branches:
      - main
    paths:
      - '.github/workflows/sync-vercel-secrets.yml'

jobs:
  sync-secrets:
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install Vercel CLI
        run: npm install -g vercel
      
      - name: Setup Vercel CLI
        run: |
          echo "Setting up Vercel CLI with token..."
          # Create a .vercel/project.json file
          mkdir -p .vercel
          echo "{\"orgId\":\"$VERCEL_ORG_ID\",\"projectId\":\"$VERCEL_PROJECT_ID\"}" > .vercel/project.json
      
      - name: Sync Supabase Secrets to Vercel
        run: |
          # Set Vercel environment variables from GitHub secrets
          echo "Synchronizing environment variables to Vercel Production environment..."
          vercel env add VITE_SUPABASE_URL production --token ${{ secrets.VERCEL_TOKEN }} <<< ${{ secrets.VITE_SUPABASE_URL }}
          vercel env add VITE_SUPABASE_ANON_KEY production --token ${{ secrets.VERCEL_TOKEN }} <<< ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          vercel env add VITE_SUPABASE_SERVICE_KEY production --token ${{ secrets.VERCEL_TOKEN }} <<< ${{ secrets.VITE_SUPABASE_SERVICE_KEY }}
      
      - name: Trigger Vercel Deployment
        if: success()
        run: |
          echo "Triggering production deployment with updated environment variables..."
          vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --confirm
